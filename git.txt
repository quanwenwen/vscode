-git初始化 
git init
查代码
git status
git add 文件名 (.)
git statu
git commit -m"信息"
git log(详细模式) --oneline
clear
写代码
git status
git add 文件名 (.)
git status
git commit -m"信息"
git log(详细模式) --oneline
clear

==================================================
创建平时世界 分支
	git branch 名字clgit 
切换
	git checkout 分支名
写代码  提交代码
测试完毕
切换回去
	git checkout master
合并
	git merge 分支名
删除
	git branch -d 分支名
========================================================


git init 初始化

    // 配置用户名密码
    git config --global user.email ""
    git config --global user.name ""

    // 查看状态
    git status 

    // 增加
    git add .

    // 提交
    git commit -m "信息"

    // 查看
    git log --oneline

    // 回滚
    git reset --hard 版本号
    

    // 查看所有操作
    git reflog rem

    // 分支
    git branch 分支名
    git branch 查看分支
    git checkout 分支名
    git merge 分支名 
        把某个分支 合并到 当前分支
        修改冲突代码
        再次commit 即可

    // 推
    git push 地址 master

    // 克隆
    git clone 地址
        自动创建一个变量叫做 origin
    // 拉
    git pull 地址 master

    // 定义变量
    origin
    git remote add 变量名 值
    git remote remove 变量名
==============================================
创建一个叫做“feature_x”的分支，并切换过去：
git checkout -b feature_x
切换回主分支：
git checkout master
再把新建的分支删掉：
git branch -d feature_x
除非你将分支推送到远端仓库，不然该分支就是 不为他人所见的：
git push origin <branch>

====================================================

# cd 改变目录  （change directory）
cd images   #进入images文件夹
cd ..      #进入上一层目录
cd ~       #进入用户根目录

# tab  自动补全，当我们输命令或者目录很长时，可以使用tab键进行自动补全。
# 按两次tab，会把所有符合要求的内容都列出来。

# pwd 打印当前目录的路径 （print work directory）
pwd


# ls 展示当前目录列表（list）
ls         # 展示当前目录
ls -a      # 展示全部内容，包括隐藏文件
ls -l      # 以列表的形式展示内容
ls -al     # 以列表的形式展示所有的内容，包括隐藏文件。
ls --help  # 查看ls所有的参数。
ls -l images   # 展示images目录下的文件，如果没有写目录，默认展示当前目录。


# clear reset清屏
clear  # 清除屏幕内容，滚动条，保留了历史
reset  # 重置，历史记录没了。


# mkdir  创建一个文件夹 （make directory）
mkdir css          # 创建一个css的文件夹
mkdir css img js   # 创建了三个文件夹

# rmdir  删除一个空的文件夹（没啥用）
rmdir img   # 删除文件夹

# touch  创建文件
touch index.html   #创建了一个index.html文件
touch css/index.css # 在css目录下创建idnex.css文件

# rm 删除一个文件获取文件夹
rm index.html # 删除index.html文件
rm js         # 删除空的js文件夹
rm -r css     # 递归删除一个文件夹
 rm -rf 文件名强制删除


# mv 移动文件（move）
mv index.html js            # 将html文件移动到js文件夹中
mv index.html index2.html   # 将index.html重命名为index2.html

# cp 复制文件（cp）
cp index.html index2.html   # 复制index.html文件，命名为index2.html
cp -r css css02             # 如果复制的是文件夹，需要使用-r参数。

# cat 查看文件全部内容
cat index.html
# less 查看文件部分内容
less index.html
# q退出查看

